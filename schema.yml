openapi: 3.0.3
info:
  title: Blog API Project
  version: '0.11'
  description: A sample blog to learn about DRF
paths:
  /api/:
    get:
      operationId: api_list
      parameters:
      - in: query
        name: author
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
    post:
      operationId: api_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/{id}/:
    get:
      operationId: api_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    put:
      operationId: api_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    patch:
      operationId: api_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPost'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/user/{id}/:
    get:
      operationId: api_user_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^.+$
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPostList'
          description: ''
components:
  schemas:
    PaginatedPostList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PatchedPost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Заголовок
          maxLength: 250
        body:
          type: string
          title: Текст поста
        created:
          type: string
          format: date-time
          readOnly: true
          title: Создано
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: Заголовок
          maxLength: 250
        body:
          type: string
          title: Текст поста
        created:
          type: string
          format: date-time
          readOnly: true
          title: Создано
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
        slug:
          type: string
          maxLength: 250
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - body
      - created
      - id
      - slug
      - title
    StatusEnum:
      enum:
      - DF
      - PB
      type: string
      description: |-
        * `DF` - Draft
        * `PB` - Published
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
